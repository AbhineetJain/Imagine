(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Row' object has no attribute 'pro_pic'"
p3
sS'layer'
p4
S'/home/abhineet/web2py/applications/imagine/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    if response.flash == auth.messages.invalid_login:\n        redirect(\'./login/error\')\n    if auth.is_logged_in():\n        redirect(URL(\'default\', \'profile\'))\n    return dict(form=auth.login())\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    if len(request.args) and request.args[0] != "logout":\n        if auth.is_logged_in():\n            redirect(URL(\'default\', \'profile\'))\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\ndef register():\n    if auth.is_logged_in():\n        redirect(URL(\'default\', \'profile\'))\n    return dict(form=auth.register(), page=\'signup\')\n\ndef login():\n    if auth.is_logged_in():\n        redirect(URL(\'default\', \'profile\'))\n    inp = \'\'\n    if len(request.args):\n        inp = "Invalid login"\n    return dict(form=auth.login(), page=\'login\', inp = inp)\n\n@auth.requires_login()\ndef profile():\n    print auth.user.pro_pic\n    username = session.auth.user.username\n    row = db(db.auth_user.username == username).select()\n    return dict(row = row[0])\n\n@auth.requires_login()\ndef editprofile():\n    return dict(form=auth.profile(), page=\'edit profile\')\n\n@auth.requires_login()\ndef profilepicture():\n    return dict(form=auth.profile(), page=\'profile picture\')\n\nresponse._vars=response._caller(profile)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/abhineet/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/home/abhineet/web2py/applications/imagine/controllers/default.py", line 104, in <module>\n  File "/home/abhineet/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/abhineet/web2py/gluon/tools.py", line 3259, in f\n    return action(*a, **b)\n  File "/home/abhineet/web2py/applications/imagine/controllers/default.py", line 91, in profile\n    print auth.user.pro_pic\n  File "/home/abhineet/web2py/gluon/dal.py", line 7343, in __getitem__\n    raise ae\nAttributeError: \'Row\' object has no attribute \'pro_pic\'\n'
p11
s.